{"version":3,"sources":["x-header.js"],"names":["root","factory","define","amd","svg4everybody","module","exports","this","embed","parent","svg","target","fragment","document","createDocumentFragment","viewBox","hasAttribute","getAttribute","setAttribute","clone","cloneNode","childNodes","length","appendChild","firstChild","loadreadystatechange","xhr","onreadystatechange","readyState","cachedDocument","_cachedDocument","implementation","createHTMLDocument","body","innerHTML","responseText","_cachedTarget","_embeds","splice","map","item","id","getElementById","rawopts","oninterval","index","uses","use","parentNode","getSVGAncestor","src","opts","attributeName","polyfill","validate","removeChild","srcSplit","split","url","shift","join","requests","XMLHttpRequest","open","send","push","numberOfSvgUseElementsToBypass","requestAnimationFrame","Object","newerIEUA","webkitUA","olderEdgeUA","edgeUA","inIframe","window","top","self","test","navigator","userAgent","match","setTimeout","getElementsByTagName","node","nodeName","toLowerCase","$","jQuery"],"mappings":"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","file":"x-header.js","sourcesContent":["!function(root, factory) {\n    \"function\" == typeof define && define.amd ? // AMD. Register as an anonymous module unless amdModuleId is set\n    define([], function() {\n        return root.svg4everybody = factory();\n    }) : \"object\" == typeof module && module.exports ? // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory() : root.svg4everybody = factory();\n}(this, function() {\n    /*! svg4everybody v2.1.9 | github.com/jonathantneal/svg4everybody */\n    function embed(parent, svg, target) {\n        // if the target exists\n        if (target) {\n            // create a document fragment to hold the contents of the target\n            var fragment = document.createDocumentFragment(), viewBox = !svg.hasAttribute(\"viewBox\") && target.getAttribute(\"viewBox\");\n            // conditionally set the viewBox on the svg\n            viewBox && svg.setAttribute(\"viewBox\", viewBox);\n            // copy the contents of the clone into the fragment\n            for (// clone the target\n            var clone = target.cloneNode(!0); clone.childNodes.length; ) {\n                fragment.appendChild(clone.firstChild);\n            }\n            // append the fragment into the svg\n            parent.appendChild(fragment);\n        }\n    }\n    function loadreadystatechange(xhr) {\n        // listen to changes in the request\n        xhr.onreadystatechange = function() {\n            // if the request is ready\n            if (4 === xhr.readyState) {\n                // get the cached html document\n                var cachedDocument = xhr._cachedDocument;\n                // ensure the cached html document based on the xhr response\n                cachedDocument || (cachedDocument = xhr._cachedDocument = document.implementation.createHTMLDocument(\"\"), \n                cachedDocument.body.innerHTML = xhr.responseText, xhr._cachedTarget = {}), // clear the xhr embeds list and embed each item\n                xhr._embeds.splice(0).map(function(item) {\n                    // get the cached target\n                    var target = xhr._cachedTarget[item.id];\n                    // ensure the cached target\n                    target || (target = xhr._cachedTarget[item.id] = cachedDocument.getElementById(item.id)), \n                    // embed the target into the svg\n                    embed(item.parent, item.svg, target);\n                });\n            }\n        }, // test the ready state change immediately\n        xhr.onreadystatechange();\n    }\n    function svg4everybody(rawopts) {\n        function oninterval() {\n            // while the index exists in the live <use> collection\n            for (// get the cached <use> index\n            var index = 0; index < uses.length; ) {\n                // get the current <use>\n                var use = uses[index], parent = use.parentNode, svg = getSVGAncestor(parent), src = use.getAttribute(\"xlink:href\") || use.getAttribute(\"href\");\n                if (!src && opts.attributeName && (src = use.getAttribute(opts.attributeName)), \n                svg && src) {\n                    if (polyfill) {\n                        if (!opts.validate || opts.validate(src, svg, use)) {\n                            // remove the <use> element\n                            parent.removeChild(use);\n                            // parse the src and get the url and id\n                            var srcSplit = src.split(\"#\"), url = srcSplit.shift(), id = srcSplit.join(\"#\");\n                            // if the link is external\n                            if (url.length) {\n                                // get the cached xhr request\n                                var xhr = requests[url];\n                                // ensure the xhr request exists\n                                xhr || (xhr = requests[url] = new XMLHttpRequest(), xhr.open(\"GET\", url), xhr.send(), \n                                xhr._embeds = []), // add the svg and id as an item to the xhr embeds list\n                                xhr._embeds.push({\n                                    parent: parent,\n                                    svg: svg,\n                                    id: id\n                                }), // prepare the xhr ready state change event\n                                loadreadystatechange(xhr);\n                            } else {\n                                // embed the local id into the svg\n                                embed(parent, svg, document.getElementById(id));\n                            }\n                        } else {\n                            // increase the index when the previous value was not \"valid\"\n                            ++index, ++numberOfSvgUseElementsToBypass;\n                        }\n                    }\n                } else {\n                    // increase the index when the previous value was not \"valid\"\n                    ++index;\n                }\n            }\n            // continue the interval\n            (!uses.length || uses.length - numberOfSvgUseElementsToBypass > 0) && requestAnimationFrame(oninterval, 67);\n        }\n        var polyfill, opts = Object(rawopts), newerIEUA = /\\bTrident\\/[567]\\b|\\bMSIE (?:9|10)\\.0\\b/, webkitUA = /\\bAppleWebKit\\/(\\d+)\\b/, olderEdgeUA = /\\bEdge\\/12\\.(\\d+)\\b/, edgeUA = /\\bEdge\\/.(\\d+)\\b/, inIframe = window.top !== window.self;\n        polyfill = \"polyfill\" in opts ? opts.polyfill : newerIEUA.test(navigator.userAgent) || (navigator.userAgent.match(olderEdgeUA) || [])[1] < 10547 || (navigator.userAgent.match(webkitUA) || [])[1] < 537 || edgeUA.test(navigator.userAgent) && inIframe;\n        // create xhr requests object\n        var requests = {}, requestAnimationFrame = window.requestAnimationFrame || setTimeout, uses = document.getElementsByTagName(\"use\"), numberOfSvgUseElementsToBypass = 0;\n        // conditionally start the interval if the polyfill is active\n        polyfill && oninterval();\n    }\n    function getSVGAncestor(node) {\n        for (var svg = node; \"svg\" !== svg.nodeName.toLowerCase() && (svg = svg.parentNode); ) {}\n        return svg;\n    }\n    return svg4everybody;\n});\n// ==== HEADER ==== //\n\n// A simple wrapper for all your custom jQuery that belongs in the header\n;(function($){\n  $(function(){\n    // Initialize svg4everybody 2.0.0+, which is supposed to be done in the header\n    svg4everybody();\n  });\n}(jQuery));\n"]}